// This file is auto-generated by @hey-api/openapi-ts

/**
 * Timeline of the blog space, contain the short representation of the pages.
 */
export type BlogTimeline = {
    pages: {
        [key: string]: PageShort;
    };
};

/**
 * The recursive structure of the sidebar containing the pages and sub-categories of the documentation.
 */
export type DocCategory = {
    has_index: boolean;
    name: string;
    pages: Array<PageShort>;
    sub_categories: Array<DocCategory>;
};

/**
 * Header of a markdown file.
 */
export type DocHeader = {
    date: string;
    description?: (string) | null;
    image?: (string) | null;
    links?: Array<DocHeaderLink>;
    spec?: DocHeaderSpec;
    tags?: Array<(string)>;
    techno?: Array<(string)>;
    title: string;
    weight?: number;
    writter?: DocHeaderWritter;
};

/**
 * Link present in the header of a markdown file.
 */
export type DocHeaderLink = {
    name: string;
    url: string;
};

/**
 * Specification of the header of a markdown file, include the information if a Header is a blog/project/doc.
 */
export type DocHeaderSpec = {
    blog?: boolean;
    doc?: boolean;
    project?: boolean;
};

/**
 * Writer present in the header of a markdown file.
 */
export type DocHeaderWritter = {
    avatar: string;
    name: string;
    url: string;
};

/**
 * Content of the home page.
 */
export type HomeContent = {
    coverTitle: Array<(string)>;
    cvUrl: string;
    history: Array<HomeHistory>;
    name: string;
    presentation: string;
    url: Array<HomeUrl>;
};

/**
 * History of the home page, contain a part of the history of Max Batleforc.
 */
export type HomeHistory = {
    date: string;
    description: string;
    imgUrl: string;
    lieux: string;
    title: string;
    url?: Array<HomeHistoryUrl> | null;
    weight: number;
};

/**
 * Url that should be present on the history.
 */
export type HomeHistoryUrl = {
    name: string;
    url: string;
};

/**
 * Url that should be present on the home page.
 */
export type HomeUrl = {
    imgUrl: string;
    name: string;
    primaire: boolean;
    url: string;
};

/**
 * A page containing the content, metadata and name of the page.
 */
export type Page = {
    content: string;
    metadata: DocHeader;
    name: string;
};

/**
 * Short representation of a page, containing only the metadata and the path to the page.
 */
export type PageShort = {
    metadata: DocHeader;
    name: string;
    path: string;
};

export type GetTimelineResponse = (BlogTimeline);

export type GetTimelineError = (unknown);

export type GetDocSidebarResponse = (DocCategory);

export type GetDocSidebarError = (unknown);

export type GetHomeResponse = (HomeContent);

export type GetHomeError = (unknown);

export type GetMediaData = {
    query: {
        /**
         * Path to the media asset.
         */
        path: string;
    };
};

export type GetMediaResponse = (unknown);

export type GetMediaError = (unknown);

export type GetPageData = {
    query: {
        /**
         * Path to the markdown page.
         */
        path: string;
    };
};

export type GetPageResponse = (Page);

export type GetPageError = (unknown);