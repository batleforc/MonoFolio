FROM registry.hub.docker.com/library/rust:1.80 AS build_base

WORKDIR /app

RUN rustup target install wasm32-unknown-unknown && \
  cargo install wasm-opt --locked && \
  cargo install -f wasm-bindgen-cli


# Prepare the build environment and cache dependencies
RUN mkdir -p libs/back/markdown_header/src && \
  mkdir -p libs/back/markdown_struct/src && \
  mkdir -p libs/back/tool_tracing/src && \
  mkdir -p apps/back/src && \
  mkdir -p apps/back/src/bin && \
  mkdir -p apps/pong/src

COPY Cargo.toml .
COPY ./libs/back/markdown_header/Cargo.toml ./libs/back/markdown_header/
COPY ./libs/back/markdown_struct/Cargo.toml ./libs/back/markdown_struct/
COPY ./libs/back/tool_tracing/Cargo.toml ./libs/back/tool_tracing/
COPY ./apps/back/Cargo.toml ./apps/back/
COPY ./apps/pong/Cargo.toml ./apps/pong/
COPY .cargo .

RUN echo "pub fn main() {}" > libs/back/markdown_header/src/lib.rs && \
  echo "pub fn main() {}" > libs/back/markdown_struct/src/lib.rs && \
  echo "pub fn main() {}" > libs/back/tool_tracing/src/lib.rs && \
  echo "fn main() {}" > apps/back/src/main.rs && \
  echo "fn main() {}" > apps/back/src/bin/sandbox.rs && \
  echo "fn main() {}" > apps/back/src/bin/gen_swagger.rs && \
  echo "fn main() {}" > apps/pong/src/main.rs

RUN cargo build --release --exclude pong --workspace

COPY . .

# Build the application
FROM build_base AS build_back

RUN touch apps/back/src/main.rs
RUN cargo build --release --exclude pong --workspace

RUN strip dist/target/release/server && \
  strip dist/target/release/swagger

# Build the wasm
FROM build_base AS build_wasm

RUN touch apps/pong/src/main.rs
RUN cargo build --release --bin pong --target wasm32-unknown-unknown && \
  wasm-bindgen --target web --out-dir ./out/ --out-name 'pong' ./dist/target/wasm32-unknown-unknown/release/pong.wasm && \
  wasm-opt -O -ol 100 -s 100 ./out/pong_bg.wasm -o ./out/pong_bg.wasm

FROM gcr.io/distroless/cc-debian12
#FROM registry.hub.docker.com/library/debian:bullseye-slim

WORKDIR /app

COPY --from=build_back /app/dist/target/release/server .
COPY --from=build_back /app/dist/target/release/swagger .

COPY ./folio_content/ .

RUN mkdir -p media/pong/

COPY --from=build_wasm /app/out/ ./media/pong/

EXPOSE 5437

ENV API_PORT 5437
ENV ENV production
ENV CONFIG_PATH content/config.yaml
ENV CONTENT_PATH ./content

CMD ["./server"]
#CMD ["tail", "-f", "/dev/null"]