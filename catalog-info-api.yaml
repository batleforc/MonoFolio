apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: folio-api
  description: Provide content of the portfolio
  annotations:
    backstage.io/spectral-ruleset-url: https://github.com/batleforc/Monofolio/blob/main/.spectral.yaml
spec:
  type: openapi
  lifecycle: production
  owner: WeeboDev
  system: infra
  definition: |
    {
      "openapi": "3.0.3",
      "info": {
        "title": "MonoFolio",
        "description": "This is the API that serves the content of the MonoFolio website to the front end, the MonoFolio idea is to have the Portfolio Front and Backend in a single repository.",
        "contact": {
          "name": "Batleforc",
          "url": "https://maxleriche.net",
          "email": "maxleriche.60@gmail.com"
        },
        "license": {
          "name": ""
        },
        "version": "0.1.0"
      },
      "servers": [
        {
          "url": "http://localhost:5437",
          "description": "Local development server."
        },
        {
          "url": "https://maxleriche.net",
          "description": "Production server referencing a tagged version of the api."
        },
        {
          "url": "https://beta.maxleriche.net",
          "description": "Beta server referencing the main branch."
        }
      ],
      "paths": {
        "/api/blog": {
          "get": {
            "tags": [
              "Blog"
            ],
            "summary": "Get the blog timeline",
            "description": "Get blog timeline with minimal description of each article.",
            "operationId": "get_timeline",
            "responses": {
              "200": {
                "description": "Content of the blog timeline ordered by date.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BlogTimeline"
                    }
                  }
                }
              },
              "500": {
                "description": "Internal server error."
              }
            }
          }
        },
        "/api/doc": {
          "get": {
            "tags": [
              "Doc"
            ],
            "summary": "Get doc sidebar",
            "description": "Get doc sidebar with minimal description of each article.",
            "operationId": "get_doc_sidebar",
            "responses": {
              "200": {
                "description": "Doc category sidebar.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/DocCategory"
                    }
                  }
                }
              },
              "500": {
                "description": "Internal server error."
              }
            }
          }
        },
        "/api/home": {
          "get": {
            "tags": [
              "Home"
            ],
            "summary": "Get home content",
            "description": "Get the content meant for the home page.",
            "operationId": "get_home",
            "responses": {
              "200": {
                "description": "Content of the home page.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HomeContent"
                    }
                  }
                }
              },
              "500": {
                "description": "Internal server error."
              }
            }
          }
        },
        "/api/media": {
          "get": {
            "tags": [
              "Media"
            ],
            "summary": "Get media from the media folder",
            "description": "Get the media asset from the media folder.",
            "operationId": "get_media",
            "parameters": [
              {
                "name": "path",
                "in": "query",
                "description": "Path to the media asset.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Media content if found."
              },
              "404": {
                "description": "Page not found inside of the Media folder or path invalid."
              },
              "500": {
                "description": "Internal server error."
              }
            }
          }
        },
        "/api/page": {
          "get": {
            "tags": [
              "Page"
            ],
            "summary": "Get a page content",
            "description": "Fetch page's content by page path in DbFolder.",
            "operationId": "get_page",
            "parameters": [
              {
                "name": "path",
                "in": "query",
                "description": "Path to the markdown page.",
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            ],
            "responses": {
              "200": {
                "description": "Content of a full page if found.",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Page"
                    }
                  }
                }
              },
              "404": {
                "description": "Page not found or path invalid."
              },
              "500": {
                "description": "Internal server error."
              }
            }
          }
        }
      },
      "components": {
        "schemas": {
          "BlogTimeline": {
            "type": "object",
            "description": "Timeline of the blog space, contain the short representation of the pages.",
            "required": [
              "pages"
            ],
            "properties": {
              "pages": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/PageShort"
                }
              }
            }
          },
          "DocCategory": {
            "type": "object",
            "description": "The recursive structure of the sidebar containing the pages and sub-categories of the documentation.",
            "required": [
              "name",
              "has_index",
              "sub_categories",
              "pages"
            ],
            "properties": {
              "has_index": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "pages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PageShort"
                }
              },
              "sub_categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocCategory"
                }
              }
            }
          },
          "DocHeader": {
            "type": "object",
            "description": "Header of a markdown file.",
            "required": [
              "title",
              "date"
            ],
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "image": {
                "type": "string",
                "nullable": true
              },
              "links": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocHeaderLink"
                }
              },
              "spec": {
                "$ref": "#/components/schemas/DocHeaderSpec"
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "techno": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "title": {
                "type": "string"
              },
              "weight": {
                "type": "integer",
                "format": "int32"
              },
              "writter": {
                "$ref": "#/components/schemas/DocHeaderWritter"
              }
            }
          },
          "DocHeaderLink": {
            "type": "object",
            "description": "Link present in the header of a markdown file.",
            "required": [
              "name",
              "url"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "DocHeaderSpec": {
            "type": "object",
            "description": "Specification of the header of a markdown file, include the information if a Header is a blog/project/doc.",
            "properties": {
              "blog": {
                "type": "boolean"
              },
              "doc": {
                "type": "boolean"
              },
              "project": {
                "type": "boolean"
              }
            }
          },
          "DocHeaderWritter": {
            "type": "object",
            "description": "Writer present in the header of a markdown file.",
            "required": [
              "name",
              "url",
              "avatar"
            ],
            "properties": {
              "avatar": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "HomeContent": {
            "type": "object",
            "description": "Content of the home page.",
            "required": [
              "name",
              "presentation",
              "coverTitle",
              "cvUrl",
              "url",
              "history"
            ],
            "properties": {
              "coverTitle": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "cvUrl": {
                "type": "string"
              },
              "history": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HomeHistory"
                }
              },
              "name": {
                "type": "string"
              },
              "presentation": {
                "type": "string"
              },
              "url": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HomeUrl"
                }
              }
            }
          },
          "HomeHistory": {
            "type": "object",
            "description": "History of the home page, contain a part of the history of Max Batleforc.",
            "required": [
              "title",
              "lieux",
              "date",
              "weight",
              "imgUrl",
              "description"
            ],
            "properties": {
              "date": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "imgUrl": {
                "type": "string"
              },
              "lieux": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "url": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HomeHistoryUrl"
                },
                "nullable": true
              },
              "weight": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "HomeHistoryUrl": {
            "type": "object",
            "description": "Url that should be present on the history.",
            "required": [
              "url",
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "HomeUrl": {
            "type": "object",
            "description": "Url that should be present on the home page.",
            "required": [
              "url",
              "name",
              "primaire",
              "imgUrl"
            ],
            "properties": {
              "imgUrl": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "primaire": {
                "type": "boolean"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "Page": {
            "type": "object",
            "description": "A page containing the content, metadata and name of the page.",
            "required": [
              "name",
              "content",
              "metadata"
            ],
            "properties": {
              "content": {
                "type": "string"
              },
              "metadata": {
                "$ref": "#/components/schemas/DocHeader"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "PageShort": {
            "type": "object",
            "description": "Short representation of a page, containing only the metadata and the path to the page.",
            "required": [
              "name",
              "path",
              "metadata"
            ],
            "properties": {
              "metadata": {
                "$ref": "#/components/schemas/DocHeader"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            }
          }
        }
      },
      "tags": [
        {
          "name": "Blog",
          "description": "Return the content of the blog timeline and page to be displayed."
        },
        {
          "name": "Doc",
          "description": "Return the content of the documentation page, sidebar and header."
        },
        {
          "name": "Home",
          "description": "Endpoints that return the content meant for the home page."
        },
        {
          "name": "Media",
          "description": "Return the assets that are meant to be dynamically loaded and not a part of the static build."
        },
        {
          "name": "Page",
          "description": "Return the content of a page with a specific workflow turning shortPage into a full page."
        }
      ]
    }
