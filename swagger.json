{
  "openapi": "3.1.0",
  "info": {
    "title": "MonoFolio",
    "description": "This is the API that serves the content of the MonoFolio website to the front end, the MonoFolio idea is to have the Portfolio Front and Backend in a single repository.",
    "contact": {
      "name": "Batleforc",
      "url": "https://maxleriche.net",
      "email": "maxleriche.60@gmail.com"
    },
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:5437",
      "description": "Local development server."
    },
    {
      "url": "https://maxleriche.net",
      "description": "Production server referencing a tagged version of the api."
    },
    {
      "url": "https://beta.maxleriche.net",
      "description": "Beta server referencing the main branch."
    }
  ],
  "paths": {
    "/api/blog": {
      "get": {
        "tags": [
          "Blog"
        ],
        "summary": "Get the blog timeline",
        "description": "Get blog timeline with minimal description of each article.",
        "operationId": "get_timeline",
        "responses": {
          "200": {
            "description": "Content of the blog timeline ordered by date.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlogTimeline"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/doc": {
      "get": {
        "tags": [
          "Doc"
        ],
        "summary": "Get doc sidebar",
        "description": "Get doc sidebar with minimal description of each article.",
        "operationId": "get_doc_sidebar",
        "responses": {
          "200": {
            "description": "Doc category sidebar.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocCategory"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/home": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Get home content",
        "description": "Get the content meant for the home page.",
        "operationId": "get_home",
        "responses": {
          "200": {
            "description": "Content of the home page.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeContent"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/media": {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Get media from the media folder",
        "description": "Get the media asset from the media folder.",
        "operationId": "get_media",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "Path to the media asset.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Media content if found."
          },
          "404": {
            "description": "Page not found inside of the Media folder or path invalid."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/page": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "Get a page content",
        "description": "Fetch page's content by page path in DbFolder.",
        "operationId": "get_page",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "Path to the markdown page.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content of a full page if found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page"
                }
              }
            }
          },
          "404": {
            "description": "Page not found or path invalid."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get project list",
        "description": "Get project list with minimal description of each article.",
        "operationId": "get_project_list",
        "responses": {
          "200": {
            "description": "Content of the Project List.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectList"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/v2/page": {
      "get": {
        "tags": [
          "Page"
        ],
        "summary": "Get a page content in V2",
        "description": "Fetch page's content by page path in DbFolder, return page in the V2 format.",
        "operationId": "get_page_v2",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "Path to the markdown page.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content of a full page if found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageV2"
                }
              }
            }
          },
          "404": {
            "description": "Page not found or path invalid."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AlignKind": {
        "type": "string",
        "description": "Alignment kind in the markdown AST.",
        "enum": [
          "Left",
          "Right",
          "Center",
          "None"
        ]
      },
      "AttributeContent": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Expression"
            ],
            "properties": {
              "Expression": {
                "$ref": "#/components/schemas/MdxJsxExpressionAttribute"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Property"
            ],
            "properties": {
              "Property": {
                "$ref": "#/components/schemas/MdxJsxAttribute"
              }
            }
          }
        ],
        "description": "Attribute content in the markdown AST."
      },
      "AttributeValue": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Expression"
            ],
            "properties": {
              "Expression": {
                "$ref": "#/components/schemas/AttributeValueExpression"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Literal"
            ],
            "properties": {
              "Literal": {
                "type": "string"
              }
            }
          }
        ],
        "description": "Attribute value in the markdown AST."
      },
      "AttributeValueExpression": {
        "type": "object",
        "description": "Attribute value expression in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "Blockquote": {
        "type": "object",
        "description": "Blockquote node in the markdown AST.",
        "required": [
          "children"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          }
        }
      },
      "BlogTimeline": {
        "type": "object",
        "description": "Timeline of the blog space, contain the short representation of the pages.",
        "required": [
          "pages"
        ],
        "properties": {
          "pages": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PageShort"
            },
            "propertyNames": {
              "type": "string"
            }
          }
        }
      },
      "Break": {
        "type": "object",
        "description": "Break node in the markdown AST."
      },
      "Code": {
        "type": "object",
        "description": "Code node in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "lang": {
            "type": [
              "string",
              "null"
            ]
          },
          "meta": {
            "type": [
              "string",
              "null"
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Definition": {
        "type": "object",
        "description": "Definition node in the markdown AST.",
        "required": [
          "url",
          "identifier"
        ],
        "properties": {
          "identifier": {
            "type": "string"
          },
          "label": {
            "type": [
              "string",
              "null"
            ]
          },
          "title": {
            "type": [
              "string",
              "null"
            ]
          },
          "url": {
            "type": "string"
          }
        }
      },
      "Delete": {
        "type": "object",
        "description": "Delete node in the markdown AST.",
        "required": [
          "children"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          }
        }
      },
      "DocCategory": {
        "type": "object",
        "description": "The recursive structure of the sidebar containing the pages and sub-categories of the documentation.",
        "required": [
          "name",
          "has_index",
          "sub_categories",
          "pages"
        ],
        "properties": {
          "has_index": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageShort"
            }
          },
          "sub_categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocCategory"
            }
          }
        }
      },
      "DocHeader": {
        "type": "object",
        "description": "Header of a markdown file.",
        "required": [
          "title",
          "date"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocHeaderLink"
            }
          },
          "spec": {
            "$ref": "#/components/schemas/DocHeaderSpec"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "techno": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "writer": {
            "$ref": "#/components/schemas/DocHeaderWriter"
          }
        }
      },
      "DocHeaderLink": {
        "type": "object",
        "description": "Link present in the header of a markdown file.",
        "required": [
          "name",
          "url"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "DocHeaderSpec": {
        "type": "object",
        "description": "Specification of the header of a markdown file, include the information if a Header is a blog/project/doc.",
        "properties": {
          "blog": {
            "type": "boolean"
          },
          "doc": {
            "type": "boolean"
          },
          "project": {
            "type": "boolean"
          }
        }
      },
      "DocHeaderWriter": {
        "type": "object",
        "description": "Writer present in the header of a markdown file.",
        "required": [
          "name",
          "url",
          "avatar"
        ],
        "properties": {
          "avatar": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "Emphasis": {
        "type": "object",
        "description": "Emphasis node in the markdown AST.",
        "required": [
          "children"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          }
        }
      },
      "FootnoteDefinition": {
        "type": "object",
        "description": "Footnote definition node in the markdown AST.",
        "required": [
          "children",
          "identifier"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "identifier": {
            "type": "string"
          },
          "label": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "FootnoteReference": {
        "type": "object",
        "description": "Footnote reference node in the markdown AST.",
        "required": [
          "identifier"
        ],
        "properties": {
          "identifier": {
            "type": "string"
          },
          "label": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "Heading": {
        "type": "object",
        "description": "Heading node in the markdown AST.",
        "required": [
          "children",
          "depth"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "depth": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "HomeContent": {
        "type": "object",
        "description": "Content of the home page.",
        "required": [
          "name",
          "presentation",
          "coverTitle",
          "cvUrl",
          "url",
          "history",
          "shortDescription"
        ],
        "properties": {
          "coverTitle": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cvUrl": {
            "type": "string"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HomeHistory"
            }
          },
          "name": {
            "type": "string"
          },
          "presentation": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "url": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HomeUrl"
            }
          }
        }
      },
      "HomeHistory": {
        "type": "object",
        "description": "History of the home page, contain a part of the history of Max Batleforc.",
        "required": [
          "title",
          "lieux",
          "date",
          "weight",
          "imgUrl",
          "description"
        ],
        "properties": {
          "date": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "imgUrl": {
            "type": "string"
          },
          "lieux": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/HomeHistoryUrl"
            }
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "HomeHistoryUrl": {
        "type": "object",
        "description": "Url that should be present on the history.",
        "required": [
          "url",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "HomeUrl": {
        "type": "object",
        "description": "Url that should be present on the home page.",
        "required": [
          "url",
          "name",
          "primaire",
          "imgUrl"
        ],
        "properties": {
          "imgUrl": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "primaire": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "Html": {
        "type": "object",
        "description": "HTML node in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "Image": {
        "type": "object",
        "description": "Image node in the markdown AST.",
        "required": [
          "alt",
          "url"
        ],
        "properties": {
          "alt": {
            "type": "string"
          },
          "title": {
            "type": [
              "string",
              "null"
            ]
          },
          "url": {
            "type": "string"
          }
        }
      },
      "ImageReference": {
        "type": "object",
        "description": "Image reference node in the markdown AST.",
        "required": [
          "alt",
          "referenceType",
          "identifier"
        ],
        "properties": {
          "alt": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "label": {
            "type": [
              "string",
              "null"
            ]
          },
          "referenceType": {
            "$ref": "#/components/schemas/ReferenceKind"
          }
        }
      },
      "InlineCode": {
        "type": "object",
        "description": "Inline code node in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "InlineMath": {
        "type": "object",
        "description": "Inline math node in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "Link": {
        "type": "object",
        "description": "Link node in the markdown AST.",
        "required": [
          "children",
          "url"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "title": {
            "type": [
              "string",
              "null"
            ]
          },
          "url": {
            "type": "string"
          }
        }
      },
      "LinkReference": {
        "type": "object",
        "description": "Link reference node in the markdown AST.",
        "required": [
          "children",
          "referenceType",
          "identifier"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "identifier": {
            "type": "string"
          },
          "label": {
            "type": [
              "string",
              "null"
            ]
          },
          "referenceType": {
            "$ref": "#/components/schemas/ReferenceKind"
          }
        }
      },
      "List": {
        "type": "object",
        "description": "List node in the markdown AST.",
        "required": [
          "children",
          "ordered",
          "spread"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "ordered": {
            "type": "boolean"
          },
          "spread": {
            "type": "boolean"
          },
          "start": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "ListItem": {
        "type": "object",
        "description": "List item node in the markdown AST.",
        "required": [
          "children",
          "spread"
        ],
        "properties": {
          "checked": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "spread": {
            "type": "boolean"
          }
        }
      },
      "Math": {
        "type": "object",
        "description": "Math node in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "meta": {
            "type": [
              "string",
              "null"
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "MdxFlowExpression": {
        "type": "object",
        "description": "MDX flow expression node in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "MdxJsxAttribute": {
        "type": "object",
        "description": "JSX attribute in the markdown AST.",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "oneOf": [
              {
                "type": "null"
              },
              {
                "$ref": "#/components/schemas/AttributeValue"
              }
            ]
          }
        }
      },
      "MdxJsxExpressionAttribute": {
        "type": "object",
        "description": "JSX expression attribute in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string",
            "description": "Value."
          }
        }
      },
      "MdxJsxFlowElement": {
        "type": "object",
        "description": "JSX flow element node in the markdown AST.",
        "required": [
          "children",
          "attributes"
        ],
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeContent"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "MdxJsxTextElement": {
        "type": "object",
        "description": "JSX text element node in the markdown AST.",
        "required": [
          "children",
          "attributes"
        ],
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttributeContent"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "MdxTextExpression": {
        "type": "object",
        "description": "MDX text expression node in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "MdxjsEsm": {
        "type": "object",
        "description": "ESM node in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "Node": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Root"
            ],
            "properties": {
              "Root": {
                "$ref": "#/components/schemas/Root"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Blockquote"
            ],
            "properties": {
              "Blockquote": {
                "$ref": "#/components/schemas/Blockquote"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "FootnoteDefinition"
            ],
            "properties": {
              "FootnoteDefinition": {
                "$ref": "#/components/schemas/FootnoteDefinition"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "MdxJsxFlowElement"
            ],
            "properties": {
              "MdxJsxFlowElement": {
                "$ref": "#/components/schemas/MdxJsxFlowElement"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "List"
            ],
            "properties": {
              "List": {
                "$ref": "#/components/schemas/List"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "MdxjsEsm"
            ],
            "properties": {
              "MdxjsEsm": {
                "$ref": "#/components/schemas/MdxjsEsm"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Toml"
            ],
            "properties": {
              "Toml": {
                "$ref": "#/components/schemas/Toml"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Yaml"
            ],
            "properties": {
              "Yaml": {
                "$ref": "#/components/schemas/Yaml"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Break"
            ],
            "properties": {
              "Break": {
                "$ref": "#/components/schemas/Break"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "InlineCode"
            ],
            "properties": {
              "InlineCode": {
                "$ref": "#/components/schemas/InlineCode"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "InlineMath"
            ],
            "properties": {
              "InlineMath": {
                "$ref": "#/components/schemas/InlineMath"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Delete"
            ],
            "properties": {
              "Delete": {
                "$ref": "#/components/schemas/Delete"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Emphasis"
            ],
            "properties": {
              "Emphasis": {
                "$ref": "#/components/schemas/Emphasis"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "MdxTextExpression"
            ],
            "properties": {
              "MdxTextExpression": {
                "$ref": "#/components/schemas/MdxTextExpression"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "FootnoteReference"
            ],
            "properties": {
              "FootnoteReference": {
                "$ref": "#/components/schemas/FootnoteReference"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Html"
            ],
            "properties": {
              "Html": {
                "$ref": "#/components/schemas/Html"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Image"
            ],
            "properties": {
              "Image": {
                "$ref": "#/components/schemas/Image"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "ImageReference"
            ],
            "properties": {
              "ImageReference": {
                "$ref": "#/components/schemas/ImageReference"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "MdxJsxTextElement"
            ],
            "properties": {
              "MdxJsxTextElement": {
                "$ref": "#/components/schemas/MdxJsxTextElement"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Link"
            ],
            "properties": {
              "Link": {
                "$ref": "#/components/schemas/Link"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "LinkReference"
            ],
            "properties": {
              "LinkReference": {
                "$ref": "#/components/schemas/LinkReference"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Strong"
            ],
            "properties": {
              "Strong": {
                "$ref": "#/components/schemas/Strong"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Text"
            ],
            "properties": {
              "Text": {
                "$ref": "#/components/schemas/Text"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Code"
            ],
            "properties": {
              "Code": {
                "$ref": "#/components/schemas/Code"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Math"
            ],
            "properties": {
              "Math": {
                "$ref": "#/components/schemas/Math"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "MdxFlowExpression"
            ],
            "properties": {
              "MdxFlowExpression": {
                "$ref": "#/components/schemas/MdxFlowExpression"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Heading"
            ],
            "properties": {
              "Heading": {
                "$ref": "#/components/schemas/Heading"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Table"
            ],
            "properties": {
              "Table": {
                "$ref": "#/components/schemas/Table"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "ThematicBreak"
            ],
            "properties": {
              "ThematicBreak": {
                "$ref": "#/components/schemas/ThematicBreak"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "TableRow"
            ],
            "properties": {
              "TableRow": {
                "$ref": "#/components/schemas/TableRow"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "TableCell"
            ],
            "properties": {
              "TableCell": {
                "$ref": "#/components/schemas/TableCell"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "ListItem"
            ],
            "properties": {
              "ListItem": {
                "$ref": "#/components/schemas/ListItem"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Definition"
            ],
            "properties": {
              "Definition": {
                "$ref": "#/components/schemas/Definition"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Paragraph"
            ],
            "properties": {
              "Paragraph": {
                "$ref": "#/components/schemas/Paragraph"
              }
            }
          }
        ],
        "description": "Main kind of node in the markdown AST."
      },
      "Page": {
        "type": "object",
        "description": "A page containing the content, metadata and name of the page.",
        "required": [
          "name",
          "content",
          "metadata"
        ],
        "properties": {
          "content": {
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/DocHeader"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PageShort": {
        "type": "object",
        "description": "Short representation of a page, containing only the metadata and the path to the page.",
        "required": [
          "name",
          "path",
          "metadata"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/DocHeader"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "PageV2": {
        "type": "object",
        "description": "V2 of the page struct, containing the metadata, path and commonmark content.",
        "required": [
          "name",
          "metadata",
          "parsed_content"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/DocHeader"
          },
          "name": {
            "type": "string"
          },
          "parsed_content": {
            "$ref": "#/components/schemas/Node"
          }
        }
      },
      "Paragraph": {
        "type": "object",
        "description": "Paragraph node in the markdown AST.",
        "required": [
          "children"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          }
        }
      },
      "ProjectList": {
        "type": "object",
        "description": "List of projects, contain the short representation of the pages, mainly aimed at the Home screen.",
        "required": [
          "projects"
        ],
        "properties": {
          "projects": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PageShort"
            },
            "propertyNames": {
              "type": "string"
            }
          }
        }
      },
      "ReferenceKind": {
        "type": "string",
        "description": "Reference kind in the markdown AST.",
        "enum": [
          "Shortcut",
          "Collapsed",
          "Full"
        ]
      },
      "Root": {
        "type": "object",
        "description": "Root node of the markdown AST.",
        "required": [
          "children"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          }
        }
      },
      "Strong": {
        "type": "object",
        "description": "Strong node in the markdown AST.",
        "required": [
          "children"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          }
        }
      },
      "Table": {
        "type": "object",
        "description": "Table node in the markdown AST.",
        "required": [
          "children",
          "align"
        ],
        "properties": {
          "align": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlignKind"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          }
        }
      },
      "TableCell": {
        "type": "object",
        "description": "Table cell node in the markdown AST.",
        "required": [
          "children"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          }
        }
      },
      "TableRow": {
        "type": "object",
        "description": "Table row node in the markdown AST.",
        "required": [
          "children"
        ],
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Node"
            }
          }
        }
      },
      "Text": {
        "type": "object",
        "description": "Text node in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "ThematicBreak": {
        "type": "object",
        "description": "Thematic break node in the markdown AST."
      },
      "Toml": {
        "type": "object",
        "description": "TOML node in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      },
      "Yaml": {
        "type": "object",
        "description": "YAML node in the markdown AST.",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Blog",
      "description": "Return the content of the blog timeline and page to be displayed."
    },
    {
      "name": "Doc",
      "description": "Return the content of the documentation page, sidebar and header."
    },
    {
      "name": "Home",
      "description": "Endpoints that return the content meant for the home page."
    },
    {
      "name": "Media",
      "description": "Return the assets that are meant to be dynamically loaded and not a part of the static build."
    },
    {
      "name": "Page",
      "description": "Return the content of a page with a specific workflow turning shortPage into a full page."
    },
    {
      "name": "Project",
      "description": "Return the content of the project list and page to be displayed."
    }
  ]
}